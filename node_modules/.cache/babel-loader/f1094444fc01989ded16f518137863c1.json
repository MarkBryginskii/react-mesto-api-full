{"ast":null,"code":"var _jsxFileName = \"/Users/markbryginskij/Desktop/Yandex.Projects/mesto-react/src/components/App.js\";\nimport React from 'react';\nimport logo from \"./images/header-logo.svg\";\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport appApi from '../utils/Api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = React.useState('');\n  React.useEffect(() => {\n    appApi.getUserInfo().then(userData => {\n      setCurrentUser(userData);\n    });\n  }, []);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState();\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard(null);\n  };\n\n  const handleUpdateUser = ({\n    name,\n    about\n  }) => {\n    appApi.setUserInfo({\n      name,\n      about\n    }).then(userData => {\n      setCurrentUser(userData);\n    });\n    closeAllPopups();\n  };\n\n  const handleUpdateAvatar = ({\n    avatar\n  }) => {\n    console.log('Акк обновился');\n    appApi.setUserInfo({\n      avatar\n    }).then(userData => {\n      setCurrentUser(userData);\n    });\n    closeAllPopups();\n  };\n\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    logo: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Main, {\n    onEditAvatarClick: handleEditAvatarClick,\n    onEditProfileClick: handleEditProfileClick,\n    onAddPlaceClick: handleAddPlaceClick,\n    onCardClick: handleCardClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    name: \"AddPhoto\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    popupSize: \"large\",\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup__input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-field-name\": \"name\",\n    id: \"popup__card-name\",\n    type: \"text\",\n    className: \"popup__text-field\",\n    autoFocus: true,\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n    minLength: \"1\",\n    maxLength: \"30\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"popup__card-name-error\",\n    className: \"popup__input-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup__input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-field-name\": \"link\",\n    id: \"popup__card-link\",\n    type: \"url\",\n    className: \"popup__text-field\",\n    placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"popup__card-link-error\",\n    className: \"popup__input-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup__save-button popup__save-button_disabled\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\")), /*#__PURE__*/React.createElement(PopupWithForm, {\n    name: \"Confirm\",\n    title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n    popupSize: \"small\",\n    isOpen: isConfirmPopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup__save-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"\\u0414\\u0430\")), /*#__PURE__*/React.createElement(ImagePopup, {\n    card: selectedCard,\n    isOpen: isImagePopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/markbryginskij/Desktop/Yandex.Projects/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","appApi","CurrentUserContext","App","currentUser","setCurrentUser","useState","useEffect","getUserInfo","then","userData","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isImagePopupOpen","setIsImagePopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleUpdateUser","name","about","setUserInfo","handleUpdateAvatar","avatar","console","log","logo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './images/header-logo.svg';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\n\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup';\n\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\n\nimport appApi from '../utils/Api.js';\n\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\n\nconst App = () => {\n\n  const [currentUser, setCurrentUser] = React.useState('');\n\n  React.useEffect( () => {\n    appApi.getUserInfo()\n    .then((userData) => {\n        setCurrentUser(userData);\n      });\n    }, []);\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState();\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  }\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  const handleUpdateUser = ({name, about}) => {\n    appApi.setUserInfo({name, about})\n    .then((userData) => {\n      setCurrentUser(userData);});\n    closeAllPopups();\n  }\n\n  const handleUpdateAvatar = ({avatar}) => {\n    console.log('Акк обновился');\n    appApi.setUserInfo({avatar})\n    .then((userData) => {\n      setCurrentUser(userData);});\n    closeAllPopups();\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n        <Header logo={logo} />\n        <Main\n          onEditAvatarClick={handleEditAvatarClick}\n          onEditProfileClick={handleEditProfileClick}\n          onAddPlaceClick={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n        />\n        <Footer />\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n        <PopupWithForm name=\"AddPhoto\" title=\"Новое место\" popupSize=\"large\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n          <div className=\"popup__input-container\">\n            <input data-field-name=\"name\" id=\"popup__card-name\" type=\"text\" className=\"popup__text-field\" autoFocus placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" required />\n            <span id=\"popup__card-name-error\" className=\"popup__input-error\" />\n          </div>\n          <div className=\"popup__input-container\">\n            <input data-field-name=\"link\" id=\"popup__card-link\" type=\"url\" className=\"popup__text-field\" placeholder=\"Ссылка на картинку\" required />\n            <span id=\"popup__card-link-error\" className=\"popup__input-error\" />\n          </div>\n          <button type=\"submit\" className=\"popup__save-button popup__save-button_disabled\" disabled>Создать</button>\n        </PopupWithForm>\n        <PopupWithForm name=\"Confirm\" title=\"Вы уверены?\" popupSize=\"small\" isOpen={isConfirmPopupOpen} onClose={closeAllPopups}>\n          <button type=\"submit\" className=\"popup__save-button\">Да</button>\n        </PopupWithForm>\n        <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}